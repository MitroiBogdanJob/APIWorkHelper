using Microsoft.AspNetCore.Mvc;
using Microsoft.EntityFrameworkCore;
using Microsoft.Data.SqlClient;  // Folose»ôte Microsoft.Data.SqlClient
using System.Collections.Generic;
using System.Threading.Tasks;
using ROTAKT.API.Data.DatabaseProduction;

[ApiController]
[Route("api/[controller]")]
public class InvoicePaymentsController : ControllerBase
{
    private readonly AppDbContextProduction _context;

    public InvoicePaymentsController(AppDbContextProduction context)
    {
        _context = context;
    }

    [HttpGet]
    public async Task<ActionResult<IEnumerable<InvoicePayment>>> GetInvoicePayments( DateTime date, [FromQuery] int page = 1, [FromQuery] int pageSize = 10)
    {
        try
        {
            var dateParameter = new SqlParameter("@Date", date);

            var invoicePayments = await _context.InvoicePayments
                .FromSqlRaw("EXEC InvoicePaymentsApi @Date", dateParameter)
                .ToListAsync();

            return Ok(invoicePayments);
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error: {ex.Message}");
            return StatusCode(500, $"Internal server error: {ex.Message}");
        }
    }
}
